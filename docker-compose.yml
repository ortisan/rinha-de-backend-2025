services:
  # PostgreSQL database service
  postgres:
    image: postgres:16-alpine
    container_name: payments-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - payments-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'

  # Dragonfly Redis-compatible service
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: payments-dragonfly
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    volumes:
      - dragonfly-data:/data
    networks:
      - payments-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'

  # Nginx service for load balancing
#  nginx:
#    image: nginx:alpine
#    container_name: payments-nginx
#    ports:
#      - "8080:80"
#    volumes:
#      - ./nginx.config:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - api
#    networks:
#      - payments-network
#    deploy:
#      resources:
#        limits:
#          cpus: '0.25'
#          memory: '128M'

  # API service
#  api:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    # Remove container_name for replicas
#    ports:
#      - "8000"  # Only expose to internal network, Nginx will handle external access
#    environment:
#      DATABASE_URL: postgres://postgres:postgres@postgres:5432/payments
#      CACHE_DATABASE_URL: redis://dragonfly:6379
#    depends_on:
#      postgres:
#        condition: service_healthy
#      dragonfly:
#        condition: service_started
#    networks:
#      - payments-network
#    deploy:
#      resources:
#        limits:
#          cpus: '0.75'
#          memory: '512M'
#      replicas: 2

networks:
  payments-network:
    driver: bridge

volumes:
  postgres-data:
  dragonfly-data:
  