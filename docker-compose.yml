services:
  # PostgreSQL database service
  postgres:
    image: postgres:17-alpine
    container_name: payments-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: payments
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512M'

  redis:
    image: redis:8.0-alpine
    container_name: rinha-redis
    command: redis-server --save "" --appendonly no --maxclients 20000
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "275MB"

#  nginx:
#    image: nginx:1.29-alpine
#    container_name: nginx
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    depends_on:
#      - api1
#      - api2
#    ports:
#      - "9999:9999"
#    networks:
#      - backend
#      - payment-processor
#    deploy:
#      resources:
#        limits:
#          cpus: "0.15"
#          memory: "15MB"

  # API service
#  api:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    # Remove container_name for replicas
#    ports:
#      - "8000"  # Only expose to internal network, Nginx will handle external access
#    environment:
#      DATABASE_URL: postgres://postgres:postgres@postgres:5432/payments
#      CACHE_DATABASE_URL: redis://dragonfly:6379
#    depends_on:
#      postgres:
#        condition: service_healthy
#      dragonfly:
#        condition: service_started
#    networks:
#      - payments-network
#    deploy:
#      resources:
#        limits:
#          cpus: '0.75'
#          memory: '512M'
#      replicas: 2

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  postgres-data:
  dragonfly-data:
  